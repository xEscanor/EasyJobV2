@model IEnumerable<EasyJob.Models.JobOffer>

@{
    ViewBag.Title = "Result";
    if (Session["userID"] == null)
    {
        Response.Redirect("~/Login/Index");
    }
    if ((bool)Session["company"] == true)
    {
        Response.Redirect("~/Home/IndexC");
    }
}


<div class="row">
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Company)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Diploma)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Experience)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Salary)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Profil)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FieldOfActivity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ville)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Type)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Company)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Diploma)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Experience)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Salary)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Profil)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FieldOfActivity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Ville)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }

    </table>
</div>
<br /><br />
<div class="row">
    <h1>Job Offers</h1>
</div>
<div class="row">
    <div class="col">
        <evil-tinder></evil-tinder>
    </div>

</div>
@Styles.Render("~/Content/likeordislike.css")
@Scripts.Render("https://code.jquery.com/pep/0.4.1/pep.js")
@Scripts.Render("https://unpkg.com/can@4/dist/global/can.js")
@Scripts.Render("~/Scripts/likeordislike.js")